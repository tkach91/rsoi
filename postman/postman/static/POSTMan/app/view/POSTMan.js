/*
 * File: app/view/MyPanel.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('POSTMan.view.POSTMan', {
	extend: 'Ext.panel.Panel',

	height: 500,
	width: 500,
	layout: {
		type: 'border'
	},
	title: 'Post Man',

	initComponent: function() {
		var me = this;

		Ext.applyIf(me, {
			items: [
				{
					xtype: 'gridpanel',
					region: 'center',
					store: 'JPostService',
					listeners:{
						viewready: function(grid) {
							var store = grid.getStore();
							store.load();
						}
					},
					viewConfig: {

					},
					plugins: [Ext.create('Ext.grid.plugin.CellEditing', {
						clicksToEdit: 1,
					})],
					columns: [
						{
							xtype: 'numbercolumn',
							hidden: true,
							dataIndex: 'id',
							text: 'Id'
						},
						{
							xtype: 'gridcolumn',
							hidden: true,
							dataIndex: 'idUser',
							text: 'IdUser'
						},
						{
							xtype: 'numbercolumn',
							hidden: true,
							dataIndex: 'idExternal',
							text: 'IdExternal'
						},
						{
							xtype: 'gridcolumn',
							dataIndex: 'address',
							text: 'Address',
							editor: {
								xtype: 'textfield'
							},
							renderer: function(value) {
								if ((value == 0) || (value == '') || (value == undefined) || (value == null))
									return '<span style="color:gray;">Address</span>';
								return value;
							}
						},
						{
							xtype: 'datecolumn',
							dataIndex: 'date',
							text: 'Date',
							editor: {
								xtype: 'datefield'
							},
							renderer: function(value) {
								if ((value == 0) || (value == '') || (value == undefined) || (value == null))
									return '<span style="color:gray;">Date</span>';
								return value;
							}
						},
						{
							xtype: 'gridcolumn',
							dataIndex: 'status',
							text: 'Status',
							editor: {
								xtype: 'textfield'
							},
							renderer: function(value) {
								if ((value == 0) || (value == '') || (value == undefined) || (value == null))
									return '<span style="color:gray;">Status</span>';
								return value;
							},
							editor: {
								xtype: 'combobox',
								displayField: 'status',
								valueField: 'status',
								store: Ext.create('Ext.data.Store', {
									fields: ['status'],
									data : [
										{'status': 'accept'},
										{'status': 'decline'},
									]
								}),
								typeAhead: true
							}
						},
						{
							xtype: 'actioncolumn',
							width:50,
							items: [{
								icon: '/static/resources/fam/delete.gif',
								tooltip: 'Delete',
								handler: function(grid, rowIndex, colIndex, item, e, record) {
									if ((record.get('address') != '') && (record.get('date') != '')) {
										Ext.MessageBox.confirm('Alert', 'Deseas eliminar este registro?', function(btn) {
											if (btn == 'yes') {
												var store = grid.getStore();
												store.remove(record);
											}
										});
									}
								}
							}]
						}
					]
				}
			]
		});

		me.callParent(arguments);
	}

});
